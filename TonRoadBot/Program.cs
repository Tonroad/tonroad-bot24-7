using Telegram.Bot;
using Telegram.Bot.Args;
using Telegram.Bot.Types.Enums;
using Telegram.Bot.Types.InputFiles;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;

class Program
{
    // üëá –¢–≤–æ–π –±–æ—Ç-—Ç–æ–∫–µ–Ω (—Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–π —Ç–æ–±–æ–π)
    private static readonly TelegramBotClient botClient = new TelegramBotClient("7683388439:AAE2WgG4QmcZJpl-HwSi0QcToe9q3YNtAEw");

    // üëá –¢–≤–æ–π –ª–∏—á–Ω—ã–π Telegram ID (–∞–¥–º–∏–Ω)
    private static readonly long adminId = 5959529178;

    // –•—Ä–∞–Ω–∏–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Ñ–æ—Ç–æ –æ—Ç –∏–≥—Ä–æ–∫–∞ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Ñ–æ—Ç–æ –æ—Ç –∞–¥–º–∏–Ω–∞
    private static readonly Dictionary<long, string> lastReceivedPhotos = new Dictionary<long, string>();
    private static string lastPhotoFromAdmin = null;

    static async Task Main()
    {
        botClient.OnMessage += Bot_OnMessage;
        botClient.StartReceiving();
        Console.WriteLine("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏ Enter –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.");
        Console.ReadLine();
        botClient.StopReceiving();
    }

    private static async void Bot_OnMessage(object sender, MessageEventArgs e)
    {
        var message = e.Message;
        if (message == null) return;

        // –ö–æ–º–∞–Ω–¥–∞ /sendback –æ—Ç –∞–¥–º–∏–Ω–∞
        if (message.Type == MessageType.Text && message.Text != null)
        {
            if (message.Text.StartsWith("/sendback"))
            {
                string[] parts = message.Text.Split(' ');
                if (parts.Length == 2 && long.TryParse(parts[1], out long targetUserId))
                {
                    if (lastPhotoFromAdmin != null)
                    {
                        await botClient.SendPhotoAsync(
                            chatId: targetUserId,
                            photo: new InputOnlineFile(lastPhotoFromAdmin),
                            caption: "üì∑ –í–∞—à–µ —Ñ–æ—Ç–æ"
                        );

                        await botClient.SendTextMessageAsync(
                            chatId: adminId,
                            text: $"‚úÖ –§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–≥—Ä–æ–∫—É {targetUserId}."
                        );
                    }
                    else
                    {
                        await botClient.SendTextMessageAsync(
                            chatId: adminId,
                            text: "‚ùå –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å–ª–∞—Ç—å –∏–≥—Ä–æ–∫—É."
                        );
                    }
                }
                else
                {
                    await botClient.SendTextMessageAsync(
                        chatId: adminId,
                        text: "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü—Ä–∏–º–µ—Ä: /sendback 123456789"
                    );
                }
                return;
            }
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ —Ñ–æ—Ç–æ
        if (message.Type == MessageType.Photo)
        {
            var senderId = message.From.Id;
            var fileId = message.Photo[^1].FileId;

            if (senderId != adminId)
            {
                lastReceivedPhotos[senderId] = fileId;

                await botClient.SendTextMessageAsync(
                    chatId: adminId,
                    text: $"üì∏ –ò–≥—Ä–æ–∫ {senderId} –ø—Ä–∏—Å–ª–∞–ª —Ñ–æ—Ç–æ.\n\n–î–ª—è –æ—Ç–≤–µ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É:\n/sendback {senderId}"
                );
            }
            else
            {
                // –§–æ—Ç–æ –æ—Ç –∞–¥–º–∏–Ω–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
                lastPhotoFromAdmin = fileId;

                await botClient.SendTextMessageAsync(
                    chatId: adminId,
                    text: "üì• –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ. –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å /sendback [user_id] —á—Ç–æ–±—ã –ø–µ—Ä–µ—Å–ª–∞—Ç—å."
                );
            }
        }
    }
}
