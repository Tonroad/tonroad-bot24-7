using System;
using System.Collections.Generic;
using Telegram.Bot;
using Telegram.Bot.Args;
using Telegram.Bot.Types.Enums;
using Telegram.Bot.Types.InputFiles;

class Program
{
    private static TelegramBotClient botClient;

    // ‚¨áÔ∏è –í–°–¢–ê–í–¨ —Å—é–¥–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
    private static readonly string botToken = "–¢–í–û–ô_–¢–û–ö–ï–ù_–ë–û–¢–ê";

    // ‚¨áÔ∏è –¢–≤–æ–π Telegram user ID (–∞–¥–º–∏–Ω)
    private static readonly long adminId = 5959529178;

    // –§–æ—Ç–æ –æ—Ç –∞–¥–º–∏–Ω–∞ (–ø–æ—Å–ª–µ–¥–Ω–µ–µ)
    private static string lastPhotoFromAdmin;

    // –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ñ–æ—Ç–æ –æ—Ç –∏–≥—Ä–æ–∫–æ–≤ (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å)
    private static Dictionary<long, string> lastReceivedPhotos = new Dictionary<long, string>();

    static void Main()
    {
        botClient = new TelegramBotClient(botToken);
        botClient.OnMessage += Bot_OnMessage;
        botClient.StartReceiving();
        Console.WriteLine("Bot is running...");
        Console.ReadLine();
        botClient.StopReceiving();
    }

    private static async void Bot_OnMessage(object sender, MessageEventArgs e)
    {
        var message = e.Message;
        if (message == null) return;

        var senderId = message.From.Id;

        // üì¶ –ö–æ–º–∞–Ω–¥–∞ /sendback
        if (message.Type == MessageType.Text && message.Text.StartsWith("/sendback"))
        {
            string[] parts = message.Text.Split(' ');
            if (parts.Length == 2 && long.TryParse(parts[1], out long targetUserId))
            {
                if (lastPhotoFromAdmin != null)
                {
                    await botClient.SendPhotoAsync(
                        chatId: targetUserId,
                        photo: new InputOnlineFile(lastPhotoFromAdmin),
                        caption: "üì∑ –í–æ—Ç –≤–∞—à–µ —Ñ–æ—Ç–æ!"
                    );

                    await botClient.SendTextMessageAsync(
                        chatId: adminId,
                        text: $"‚úÖ –§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–≥—Ä–æ–∫—É {targetUserId}."
                    );
                }
                else
                {
                    await botClient.SendTextMessageAsync(
                        chatId: adminId,
                        text: "‚ùå –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å–ª–∞—Ç—å."
                    );
                }
            }
            else
            {
                await botClient.SendTextMessageAsync(
                    chatId: adminId,
                    text: "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü—Ä–∏–º–µ—Ä: /sendback 123456789"
                );
            }

            return;
        }

        // üì∏ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ
        if (message.Type == MessageType.Photo)
        {
            var fileId = message.Photo[^1].FileId;

            if (senderId == adminId)
            {
                // –§–æ—Ç–æ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                lastPhotoFromAdmin = fileId;

                await botClient.SendTextMessageAsync(
                    chatId: adminId,
                    text: "üì• –§–æ—Ç–æ –ø—Ä–∏–Ω—è—Ç–æ. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /sendback user_id, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫—É."
                );
            }
            else
            {
                // –§–æ—Ç–æ –æ—Ç –∏–≥—Ä–æ–∫–∞
                lastReceivedPhotos[senderId] = fileId;

                await botClient.SendPhotoAsync(
                    chatId: adminId,
                    photo: new InputOnlineFile(fileId),
                    caption: $"üì∏ –ò–≥—Ä–æ–∫ {senderId} –ø—Ä–∏—Å–ª–∞–ª —Ñ–æ—Ç–æ.\n\n–î–ª—è –æ—Ç–≤–µ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É:\n/sendback {senderId}"
                );
            }
        }
    }
}
